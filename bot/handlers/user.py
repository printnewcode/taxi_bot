from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from bot import bot
from bot.texts import START_TEXT
from bot.models import User, Ride


def menu(user):
    """–ú–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    """MENU_BUTTONS = InlineKeyboardMarkup()
    menu_call = InlineKeyboardButton(text="–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏", callback_data=f"taxi_{user.telegram_id}")
    MENU_BUTTONS.add(menu_call)"""

    bot.send_message(
        user.telegram_id,
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.name}!\n\n"
        f"üíº –í–∞—à–∞ —Ä–æ–ª—å: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
        f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {user.rating}",
    )


def call_taxi(message: Message, status=0, pk_=0):
    """–í—ã–∑–æ–≤ —Ç–∞–∫—Å–∏"""
    if status == 0:
        ride = Ride.objects.create(
            user=User.objects.get(telegram_id=message.chat.id),
        )  # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ª—è—Ä–∞ –º–æ–¥–µ–ª–∏ –ø–æ–µ–∑–¥–∫–∏
    else:
        ride = Ride.objects.get(pk=pk_)

    TAXI_KEYBOARDS = InlineKeyboardMarkup()
    taxi_price = InlineKeyboardButton(text=f"üí∏ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏: {ride.cost} —Ä—É–±.",
                                      callback_data=f"cost_{message.chat.id}_{ride.pk}")
    taxi_geo_start = InlineKeyboardButton(text=f"üìç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å –æ—Ç–∫—É–¥–∞: {ride.adress_start}",
                                          callback_data=f"start-adress_{message.chat.id}_{ride.pk}")
    taxi_geo_end = InlineKeyboardButton(text=f"üìç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å –∫—É–¥–∞: {ride.adress_end}",
                                        callback_data=f"end-adress_{message.chat.id}_{ride.pk}")
    taxi_call = InlineKeyboardButton(text="–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏!",
                                     callback_data=f"taxi-call_{ride.pk}")
    TAXI_KEYBOARDS.add(taxi_price).add(taxi_geo_start).add(taxi_geo_end).add(taxi_call)

    bot.send_message(
        message.chat.id,
        text="üëã –ü—Ä–∏–≤–µ—Ç! –î–ª—è –≤—ã–∑–æ–≤–∞ —Ç–∞–∫—Å–∏ —É–∫–∞–∂–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –ø–æ–µ–∑–¥–∫–∏: –°—Ç–æ–∏–º–æ—Å—Ç—å, –¢–æ—á–∫–∏ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–∞",
        reply_markup=TAXI_KEYBOARDS
    )


def taxi_call(call: CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–¥–∏—Ç–µ–ª—è–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—ã–∑–æ–≤–µ —Ç–∞–∫—Å–∏"""
    _, ride_id =call.data.split("_")
    ride = Ride.objects.get(pk=ride_id)

    if ride.adress_start == "–ù–µ –≤—ã–±—Ä–∞–Ω–æ" or ride.adress_end == "–ù–µ –≤—ã–±—Ä–∞–Ω–æ":
        bot.send_message(text="–¢–æ—á–∫–∏ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –ø–æ–µ–∑–¥–∫–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏!", chat_id=call.message.chat.id)
        call_taxi(call.message, status=1, pk_=ride.pk)
        return
    
    drivers = User.objects.filter(is_driver=True)

    
    for driver in drivers:
        markup = InlineKeyboardMarkup()
        btn_yes = InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑!", callback_data="ride_accept_{ride.pk}_{driver.pk}")
        btn_no = InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–∫–∞–∑!", callback_data="ride_decline_{ride.pk}_{driver.pk}")
        markup.add(btn_yes).add(btn_no)

        bot.send_message(text=f"""
üöñ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ–±—è!

üë§ –ö–ª–∏–µ–Ω—Ç: {ride.user.name} (—Ä–µ–π—Ç–∏–Ω–≥ ‚≠ê {ride.user.rating})  
üìç –ú–∞—Ä—à—Ä—É—Ç: {ride.adress_start} –¥–æ {ride.adress_end}
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏: {ride.cost} ‚ÇΩ""",
reply_markup=markup
                         )
        

def answer_ride(call: CallbackQuery):
    """–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏"""
    _, answer, ride_pk, driver_id = call.data.split("_")
    if answer == "decline":
        return
    else:
        ride = Ride.objects.get(pk=ride_pk)
        driver = User.objects.get(pk=driver_id)
        ride.driver = driver

        ride.save()

        bot.send_message(chat_id=driver.telegram_id, text=f"–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑!\n\n–ê–¥—Ä–µ—Å: {ride.adress_start}") #  –°–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª—é –æ –Ω–∞—á–∞–ª–µ –ø–æ–µ–∑–¥–∫–∏
        bot.send_message(chat_id=ride.user.telegram_id, text=f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, –æ–∂–∏–¥–∞–π—Ç–µ –≤–æ–¥–∏—Ç–µ–ª—è\n\nüöï –í–æ–¥–∏—Ç–µ–ª—å: {driver.name} (—Ä–µ–π—Ç–∏–Ω–≥ ‚≠ê {driver.rating}\n\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {driver.number}") #  –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø–æ–µ–∑–¥–∫–∏
        
